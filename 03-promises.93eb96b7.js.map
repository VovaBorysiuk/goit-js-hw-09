{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,QAASC,SAASC,cAAc,kBAChCC,OAAQF,SAASC,cAAc,iBAC/BE,SAAUH,SAASC,cAAc,mBACjCG,YAAaJ,SAASC,cAAc,WAMtC,SAASI,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAYR,GAASD,EAAW,GAAKE,EAE3CQ,YAAW,WACLJ,EACFF,EAAQ,uBAAwCO,OAAfX,EAAS,QAAgBW,OAAVF,EAAU,QAExDJ,EAAK,sBAAqCM,OAAfX,EAAS,QAAgBW,OAAVF,EAAU,O,GAEvDA,E,IAdPjB,EAAKM,YAAYc,iBAAiB,SAmBlC,SAA4BC,GAC1BA,EAAMC,iBAMN,IAJA,IAAMb,EAAQc,OAAOvB,EAAKC,QAAQuB,OAC5Bd,EAAOa,OAAOvB,EAAKI,OAAOoB,OAC1BC,EAASF,OAAOvB,EAAKK,SAASmB,OAE3BE,EAAI,EAAGA,GAAKD,EAAQC,IAC3BnB,EAAcmB,EAAGjB,EAAOC,GACrBiB,MAAK,SAAAC,GACJ9B,EAAA+B,OAAOC,QAAQF,GACfG,QAAQC,IAAIJ,E,IAEbK,OAAM,SAAAC,GACLpC,EAAA+B,OAAOM,QAAQD,GACfH,QAAQC,IAAIE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  delayEl: document.querySelector('[name=\"delay\"]'),\n  stepEl: document.querySelector('[name=\"step\"]'),\n  amountEl: document.querySelector('[name=\"amount\"]'),\n  submitBtnEl: document.querySelector('button'),\n};\n\nrefs.submitBtnEl.addEventListener('click', onCreatePromiseBtn);\n\n//================================================================\nfunction createPromise(position, delay, step) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const timeDelay = delay + (position - 1) * step;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${timeDelay} ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${timeDelay} ms`);\n      }\n    }, timeDelay);\n  });\n}\n\n//================================================================\nfunction onCreatePromiseBtn(event) {\n  event.preventDefault();\n\n  const delay = Number(refs.delayEl.value);\n  const step = Number(refs.stepEl.value);\n  const amount = Number(refs.amountEl.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay, step)\n      .then(message => {\n        Notify.success(message);\n        console.log(message);\n      })\n      .catch(error => {\n        Notify.failure(error);\n        console.log(error);\n      });\n  }\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delayEl","document","querySelector","stepEl","amountEl","submitBtnEl","$ce04d3a99e08e73b$var$createPromise","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","timeDelay","setTimeout","concat","addEventListener","event","preventDefault","Number","value","amount","i","then","message","Notify","success","console","log","catch","error","failure"],"version":3,"file":"03-promises.93eb96b7.js.map"}